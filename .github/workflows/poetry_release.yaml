name: Publish to PYPI
on: 
  push:
    branches:
      - main
jobs:
  Poetry-Release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Installing Poetry globally
        run: pipx install poetry
      - name: Installing Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: poetry
      - name: Getting release version
        run: echo "VERSION=$(poetry version | awk '{print $2}')" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            dpkg-dev \
            build-essential \
            freeglut3-dev \
            libgl1-mesa-dev \
            libglu1-mesa-dev \
            libgstreamer-plugins-base1.0-dev \
            libgtk-3-dev \
            libjpeg-dev \
            libnotify-dev \
            libpng-dev \
            libsdl2-dev \
            libsm-dev \
            libunwind-dev \
            libtiff-dev \
            libwebkit2gtk-4.0-dev \
            libxtst-dev \
            libgtk2.0-dev      
      - name: Installing Poetry environment
        run: poetry install
      - name: Running pytest
        id: pytest
        run: poetry run pytest -v
      - name: Running mypy
        id: mypy
        run: poetry run mypy libretro_finder/ config/ tests/
      - name: Running pylint
        id: pylint
        run: poetry run pylint libretro_finder/ config/ tests/
      - name: Checking code coverage
        id: coverage
        run: poetry run pytest --cov=config --cov=libretro_finder
      - name: Poetry Build
        id: build
        run: poetry build
        if: steps.pytest.outcome == 'success'
      - name: Authorize GitHub Actions to publish on PYPIPublish build
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
        if: steps.build.outcome == 'success'
      - name: Publish build
        run: poetry publish
        if: steps.build.outcome == 'success'
          